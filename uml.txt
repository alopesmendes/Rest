@startuml

package RmiAndWebServiceIfCars {
    package cars {
    
        interface ICar {
            +Rating[] ratings()
            
            +Rating generalRating()
            
            +String model()
            
            +double price(String fromCurrency)
            
            +int quantity()
            
            +{static} ICar create(...)
        }
        
        class Storage {
            +ICar[] cars()
            +ICar get(int index)
        }
        
        Storage -down-> ICar
    }
    
    package locateRMI {
        enum CarCondition {
            Good, 
            Repair, 
            Destroy
        }
        
        enum Score {
            Excellent, 
            Good, 
            Adequate, 
            Bad, 
            Terrible
        }
        
        note top of Rating : mutiple rating to come
        class Rating {
            String comment()
            Score rating()
            CarCondition condition()
            
            +{static} Rating RATING_DEFAULT;
            
        }
        
        class LocateService {
            +LocateService(Storage storage)
            
            +Map<String, Map<Long, Int>> getAllCarsFromModel(String model)
            ==
            
            +double getCarPrice(String model)
            +Optional<ICar> getCar(String model, Predicate<Double> pr)
            
        }
        
        CarCondition -up-> Rating
        Score -right--> Rating
        Rating -right--> ICar
    }
    
    package webservice {
        class Trade {
            +boolean canBuy(String model, String fromCurrency, double amount)
            +ICar sell(String model, String fromCurrency, double amount)
        }
    }
}

package WebServiceBank {
    class Account {
        +boolean deposit(double amount)
        
        +double withdrawn(double amount)
        
        +String fromCurrency()
        
        +boolean setFromCurrency(String fromCurrency)
    }
    
    class Bank {
        +void register(...)
        
        +Account[] accounts()
        
        +Account getAccount(long id)
        
        +{static} double exchange(String fromCurrency, String toCurrency, double amount) 

    }
    
    Account --> Bank
}

package RmiEiffelCorp {
    package employee {
        interface IEmployee {
            +Optional<ICar> request(ICar car)
            
            +List<ICar> cars()
            
            +void returnCar(ICar car, Consumer<ICar> rating)
        }
    } 
    
    package clientRMI {}
}


RmiAndWebServiceIfCars <-down----- WebServiceBank

@enduml
